---
import { NAVIGATION_MENU, network } from "../consts";
import ConnectWalletDropdown from "./ConnectWalletDropdown.svelte";
import SunMoon from "./SunMoon.astro";

interface Props {
  isWallet: boolean;
}

const { isWallet } = Astro.props;
---

<div class="navbar flex flex-col items-start justify-center md:flex-row z-50">
  <div class="navbar-start flex items-center justify-start">
    {
      () => {
        if (isWallet) {
          return (
            <div class="dropdown">
              <label tabindex="0" class="btn btn-ghost lg:hidden">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4 6h16M4 12h8m-8 6h16"
                  />
                </svg>
              </label>
              <ul
                tabindex="0"
                class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52"
              >
                {Object.entries(NAVIGATION_MENU).map(([title1, val1]) => {
                  return (
                    <li>
                      <div>{title1}</div>
                      <ul class="p-2">
                        {Object.entries(val1).map(([title2, link]) => {
                          const target = link.startsWith("http")
                            ? "_blank"
                            : "_self";
                          return (
                            <li>
                              <a href={link} target={target}>
                                {title2}
                              </a>
                            </li>
                          );
                        })}
                      </ul>
                    </li>
                  );
                })}
              </ul>
            </div>
          );
        }
      }
    }
    <SunMoon />
    <a class="text-3xl font-bold" href="/">LiSuify</a>
    {
      () => {
        if (isWallet) {
          return <div class="text-sm ml-2 font-thin capitalize">{network}</div>;
        }
      }
    }
  </div>
  {
    () => {
      if (isWallet) {
        return (
          <div class="navbar-center hidden lg:flex">
            {Object.entries(NAVIGATION_MENU).map(([title1, val1]) => {
              return (
                <div class="dropdown dropdown-hover">
                  <label tabindex="0" class="btn">
                    {title1}
                  </label>
                  <ul
                    tabindex="0"
                    class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52"
                  >
                    {Object.entries(val1).map(([title2, link]) => {
                      const target = link.startsWith("http")
                        ? "_blank"
                        : "_self";
                      return (
                        <li>
                          <a href={link} target={target}>
                            {title2}
                          </a>
                        </li>
                      );
                    })}
                  </ul>
                </div>
              );
            })}
          </div>
        );
      }
    }
  }
  {
    () => {
      if (isWallet) {
        return (
          <div class="navbar-end justify-center md:justify-end w-screen lg:w-1/2">
            <ConnectWalletDropdown client:only />
          </div>
        );
      }
      return (
        <div class="navbar-end hidden md:flex justify-end w-1/2">
          <a class="btn btn-primary" href="/">
            Go to App
          </a>
        </div>
      );
    }
  }
</div>
